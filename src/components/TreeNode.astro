---
import '../styles/global.css'
// TreeNode.astro

import * as url from "url";
export interface Props {
    node: {
        title: string;
        url?: string;
        expand: boolean;
        children?: Array<{ title: string; url: string, expand: boolean, children?: any[] }>;
    };
}

const {node, depth = 0} = Astro.props;
const insert = `${depth * 25}px`
---
<script>
    // 在页面上找到所有带有 `alert` 类的按钮。
    // const buttons = document.querySelectorAll('.item');
    //
    // // 处理每个按钮上的点击事件。
    // buttons.forEach((button) => {
    //     button.addEventListener('click', () => {
    //         alert('按钮被点击了！');
    //     });
    // });
</script>
<div class="root">
    {node.url !== 'root' &&
            <a class:list={['item', node.children ? (node.expand ? 'downArrow' : 'rightArrow') : '']}
               href={node.url}>{node.title}</a>}
    {node.children && node.children.length > 0 ? (
            <ul>
                {node.children.map((child) => (
                        <li key={child.url}>
                            <Astro.self node={child} depth={depth + 1}/>
                        </li>
                ))}
            </ul>
    ) : null}
</div>

<style define:vars={{insert}}>

    .root {
        background: white;
        font-size: 14px;
    }

    ul {
        width: 100%;
        list-style-type: none;
        padding-left: 0;
        margin: 0;
    }


    li {
        display: flex;
        flex-direction: column;
    }

    .item:hover {
        background-color: var(--background-hover);
        border-radius: 3px;
        color: var(--color-theme-1);
    }


    .selected {
        background-color: var(--background-hover);
        border-radius: 3px;
    }


    ul {
        list-style-type: none;
        padding-left: 0px;
    }

    .item {

        display: flex;
        flex: 1;
        padding: 7px 7px 7px var(--insert);
        align-items: center; /* 确保子元素在垂直方向上居中对齐 */
        flex-direction: row; /* 水平排列子元素 */
        cursor: pointer;

    }


    .rightArrow::before {
        content: '';
        display: inline-block;
        width: 0;
        height: 0;
        border-top: 4px solid transparent; /* 上边框透明 */
        border-bottom: 4px solid transparent; /* 下边框透明 */
        border-right: 4px solid transparent;
        border-left: 4px solid var(--color-text-hint); /* 左边框实色，决定了三角形的颜色 */
        margin-right: 6px;
    }

    .downArrow::before {
        content: '';
        display: inline-block;
        width: 0;
        height: 0;
        border-top: 4px solid var(--color-text-hint);
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-bottom: 4px solid transparent;
        margin-right: 6px;
    }

    a {
        color: var(--color-text);
        text-decoration: none;
    }
</style>